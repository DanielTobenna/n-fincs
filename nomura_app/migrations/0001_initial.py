# Generated by Django 3.2 on 2023-08-20 00:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('first_name', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('last_name', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('email_address', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('country', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('city', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('home_address', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('Date_of_birth', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('TRANSGENDER', 'TRANSGENDER'), ('RATHER NOT SAY', 'RATHER NOT SAY')], default='update your account', max_length=64, null=True)),
                ('occupation', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('monthly_income', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('reason_for_investing', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('code', models.CharField(blank=True, max_length=12)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('deposit', models.FloatField(default=0, null=True)),
                ('balance', models.FloatField(default=0, null=True)),
                ('withdrawal', models.FloatField(default=0, null=True)),
                ('profit', models.FloatField(default=0, null=True)),
                ('roi', models.FloatField(default=0.015, null=True)),
                ('running_days', models.IntegerField(default=0, null=True)),
                ('wallet_address', models.CharField(default='update your account', max_length=400, null=True)),
                ('ID_CARD', models.ImageField(blank=True, null=True, upload_to='')),
                ('next_of_kin_fullname', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('next_of_kin_gender', models.CharField(blank=True, choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('TRANSGENDER', 'TRANSGENDER'), ('RATHER NOT SAY', 'RATHER NOT SAY')], default='update your account', max_length=64, null=True)),
                ('next_of_kin_age', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('next_of_kin_phonenumber', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('next_of_kin_home_address', models.CharField(blank=True, default='update your account', max_length=64, null=True)),
                ('relationship_status_with_next_of_kin', models.CharField(blank=True, choices=[('FATHER', 'FATHER'), ('MOTHER', 'MOTHER'), ('SIBLING', 'SIBLING'), ('SPOUSE', 'SPOUSE'), ('OTHERS', 'OTHERS')], default='update your account', max_length=64, null=True)),
                ('recommended_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ref_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Maximum_withdrawal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maximum_withdrawal', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Minimum_withdrawal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minimum_withdrawal', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investment_name', models.CharField(blank=True, max_length=64, null=True)),
                ('mimimum_amount', models.FloatField(blank=True, default=0, null=True)),
                ('maximum_amount', models.FloatField(blank=True, default=0, null=True)),
                ('return_of_investment', models.CharField(blank=True, max_length=5000, null=True)),
                ('duration', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_agenda', models.CharField(blank=True, default='Live Video', max_length=68, null=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Withdrawal_request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_username', models.CharField(max_length=200, null=True)),
                ('client_email', models.CharField(max_length=200, null=True)),
                ('transaction_hash', models.CharField(max_length=20, null=True)),
                ('crypto_used_for_requesting_withdrawal', models.CharField(max_length=35, null=True)),
                ('withdrawal_address', models.CharField(max_length=200, null=True)),
                ('amount', models.FloatField(default=0, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nomura_app.client')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(blank=True, max_length=64, null=True)),
                ('transaction_id', models.CharField(blank=True, default='504ID.omit', max_length=30, null=True)),
                ('investment_plan', models.CharField(blank=True, default='504Package.omit', max_length=64, null=True)),
                ('amount', models.FloatField(default=0, null=True)),
                ('status', models.CharField(blank=True, max_length=64, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nomura_app.client')),
            ],
        ),
        migrations.CreateModel(
            name='Payment_id',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(max_length=200, null=True)),
                ('price_amount', models.CharField(max_length=200, null=True)),
                ('investment_plan', models.FloatField(default=0.0052, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nomura_app.client')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_subject', models.CharField(blank=True, max_length=200, null=True)),
                ('message_body', models.TextField(blank=True, max_length=1500, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nomura_app.client')),
            ],
        ),
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(blank=True, default='Pending Bonus', max_length=64, null=True)),
                ('amount', models.FloatField(default=0, null=True)),
                ('code', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('client_email', models.CharField(blank=True, max_length=68, null=True)),
                ('message', models.TextField(blank=True, max_length=1000, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nomura_app.client')),
            ],
        ),
    ]
